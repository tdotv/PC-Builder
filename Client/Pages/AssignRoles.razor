@page "/assignroles"

@using PC_Designer.Shared
@using PC_Designer.ViewModels
@inject IAssignRolesViewModel _assignRolesViewModel
@inject IToastService _toastService

<div class="row">
    <div class="col-md-4 offset-4">
        <div class="card">
            <div class="card-header">Assign Role</div>
            <div class="card-body">
                @if (_assignRolesViewModel.AllUsers?.Any() ?? false)
                {
                    @foreach (var user in _assignRolesViewModel.AllUsers)
                    {
                        <div class="contact-list-item">
                            <div class="row align-items-center">
                                <div class="col-md-6">
                                    <p style="font-size: large;">@user.EmailAddress</p>
                                </div>
                                <div class="col-md-3">
                                    <select class="form-control" 
                                            name="roles" 
                                            id="roles" 
                                            @onchange="@AssignRole">
                                        <option value=@($"#{user.UserId}")>None</option>
                                        <option value=@($"admin#{user.UserId}") selected="@(user.Role=="admin")">Admin</option>
                                        <option value=@($"general#{user.UserId}") selected="@(user.Role =="general")">General</option>
                                    </select>
                                </div>
                                <div class="col-md-3">
                                    <button class="btn btn-danger" @onclick="@(() => DeleteUser(user.UserId))">Block</button>
                                </div>
                            </div>
                        </div>
                    }
                }

                <br />

            </div>
        </div>
    </div>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await _assignRolesViewModel.LoadAllUsers();
    }

    private async Task DeleteUser(long userId)
    {
        await _assignRolesViewModel.DeleteUser(userId);
        await _assignRolesViewModel.LoadAllUsers();
        StateHasChanged();
    }

    private async Task AssignRole(ChangeEventArgs eventArgs)
    {
        var selectedValues = (eventArgs.Value?.ToString() ?? "").Split('#');

        await _assignRolesViewModel.AssignRole(Convert.ToInt64(selectedValues[1]), selectedValues[0]);
        _toastService.ShowSuccess("Role updated successfully");
    }
}