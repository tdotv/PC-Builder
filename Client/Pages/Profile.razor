@page "/profile"
@using PC_Designer.ViewModels
@using PC_Designer.Shared
@using System.Security.Claims
@inject IProfileViewModel _profileViewModel
@inject NavigationManager _navigationManager

@if (_profileViewModel == null)
{
    <p>Loading...</p>
}
else
{
    <div class="card mb-3">
        <div class="col-md-8">
            <div class="row justify-content-ceter align-items-center">
                <div class="col-md-4 text-center">
                    <img src="@_profileViewModel.ProfilePictureUrl" alt="profile Picture" style="max-width: 150px; border-radius: 35%; margin-left: 50px;" class="mx-3"/>
                </div>
                <div class="col-md-8">
                    <div class="card-body">
                        <h4 class="card-title">@($"{_profileViewModel.FirstName} {_profileViewModel.LastName}")</h4>
                        <p class="card-text"><strong>Email:</strong> @_profileViewModel.EmailAddress</p>
                        <p class="card-text"><strong>Date of Birth:</strong> @_profileViewModel.DateOfBirth.ToString("dd/MM/yyyy")</p>
                        <button class="btn btn-link" @onclick="ToggleEditMode">Edit Profile</button>
                    </div>
                </div>
            </div>
            @if (_profileViewModel.IsEditing)
            {
                <div class="card mt-3">
                    <div class="card-body">
                        <h5 class="card-title">Edit Profile</h5>
                        <EditForm Model="_profileViewModel" OnInvalidSubmit="_profileViewModel.UpdateProfile">
                            <ValidationSummary />

                            <div class="form-group>">
                                <label for="FirstName">First Name:</label>
                                <InputText id="FirstName" @bind-Value="_profileViewModel.FirstName" class="form-control" />
                            </div>

                            <div class="form-group>">
                                <label for="FirstName">Last Name:</label>
                                <InputText id="LastName" @bind-Value="_profileViewModel.LastName" class="form-control" />
                            </div>

                            <div class="form-group>">
                                <label for="EmailAddress">Email:</label>
                                <InputText id="EmailAddress" @bind-Value="_profileViewModel.EmailAddress" class="form-control" />
                            </div>

                            <div class="form-group>">
                                <label for="DateOfBirth">Date of Birth:</label>
                                <InputDate id="DateOfBirth" @bind-Value="_profileViewModel.DateOfBirth" class="form-control" />
                            </div>

                            <div class="form-group>">
                                <label for="AboutMe">About Me:</label>
                                <InputText id="AboutMe" @bind-Value="_profileViewModel.AboutMe" class="form-control" />
                            </div>
                        
                        </EditForm>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="row">
        <!-- ... -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Additional Information</h5>
                    @_profileViewModel.AboutMe
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Settings</h5>

                    <div class="col-12">
                        <input type="checkbox" @bind="@_profileViewModel.DarkTheme" id="chkDarkTheme">
                        <label> Dark Theme </label>    
                        <br>

                        <input type="checkbox" @bind="@_profileViewModel.Notifications" id="chkNotification">
                        <label> Notification </label>    
                        <br>   
                    </div>
                    <div class="col-12">
                        <button class="btn btn-primary" @onclick="_profileViewModel.Save">Save</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {

    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationState; // _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if(user.Identity.IsAuthenticated)
        {
            var claim = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier);
            _profileViewModel.UserId = Convert.ToInt64(claim?.Value);
            await _profileViewModel.GetProfile();
        }
        else
        {
            _navigationManager.NavigateTo("/");
        }        
    }

    private void ToggleEditMode()
    {
        _profileViewModel.IsEditing = !_profileViewModel.IsEditing;
    }
}