@page "/index"
@inject HttpClient Http
@inject IPcConfigurationService configurationService
@inject IJSRuntime _jsRuntime
@using PC_Designer.ViewModels

<PageTitle>Home Page</PageTitle>

<style>
    .config-card {
        background-color: #f8f9fa;
        border: 1px solid #ced4da;
    }

    .config-card h5 {
        color: #007bff;
    }

    .config-card p,
    .config-card ul,
    .config-card small {
        color: #495057;
    }
</style>

<div>
    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var configuration in configurations)
        {
            <div class="col">
                <div class="card h-100 config-card">
                    <div class="card-body">
                        <h5 class="card-title">@configuration.Name Configuration</h5>
                        <p class="card-text"><strong>About:</strong> @configuration.About</p>
                        <ul class="list-unstyled">
                            <li><strong>Motherboard:</strong> @configuration.MotherBoardName </li>
                            <li><strong>CPU:</strong> @configuration.CpuName</li>
                            <li><strong>Graphics Card:</strong> @configuration.GraphicalCardName</li>
                            <li><strong>Case:</strong> @configuration.CaseName</li>
                        </ul>
                        <div class="d-flex justify-content-between">
                            <p class="card-text"><small><strong>Cost:</strong> @configuration.Cost</small></p>
                            <p class="card-text"><small><strong>Power:</strong> @configuration.TotalWattage Wattage</small></p>
                        </div>
                        <AuthorizeView Roles="admin">
                            <button @onclick="() => DeleteConfigurationAsync(configuration.PcConfigurationId)" class="btn btn-danger">Delete</button>
                        </AuthorizeView>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private List<PcConfigurationViewModel> configurations = new List<PcConfigurationViewModel>();

    protected override async Task OnInitializedAsync()
    {
        configurations = (await configurationService.GetConfigurationsAsync())?.Select
            (configuration => (PcConfigurationViewModel)configuration).ToList() ?? new List<PcConfigurationViewModel>();
    }

    private async Task DeleteConfigurationAsync(int id)
    {
        var success = await configurationService.DeleteConfigurationsAsync(id);
        if (success)
        {
            configurations = await configurationService.GetConfigurationsAsync();
        }
    }
}