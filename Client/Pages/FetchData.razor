@page "/fetchdata"
@inject IPcConfigurationService ConfigurationService
@inject HttpClient Http
@using PC_Designer.ViewModels

<PageTitle>Data</PageTitle>

<h1>Data</h1>

<p>This component fetching data from the server.</p>

@if (configurations == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Motherboard</th>
                <th>CPU</th>
                <th>Graphical Card</th>
                <th>Case</th>
                <th>Name</th>
                <th>Total Wattage</th>
                <th>Create On</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var configuration in configurations)
            {
                <tr>
                    <td>@configuration.PcConfigurationId</td>
                    <td>@configuration.MotherBoardName</td>
                    <td>@configuration.CpuName</td>
                    <td>@configuration.GraphicalCardName</td>
                    <td>@configuration.CaseName</td>
                    <td>@configuration.Name</td>
                    <td>@configuration.TotalWattage</td>
                    <td>@configuration.CreatedOn</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<PcConfigurationViewModel> configurations = new List<PcConfigurationViewModel>();
    private PcConfigurationViewModel currentConfiguration = new PcConfigurationViewModel();  // for Create or Edit

    protected override async Task OnInitializedAsync()
    {
        configurations = (await ConfigurationService.GetConfigurationsAsync())?.Select
            (configurations => (PcConfigurationViewModel)configurations).ToList() ?? new List<PcConfigurationViewModel>();
    }
}